[["DataProcess.html", "3 数据处理 3.1 一句话Tips 3.2 data.table包 3.3 与SQL数据库交互 3.4 连接各种数据库的R包 3.5 前向、后向、线性和样条插值", " 3 数据处理 3.1 一句话Tips 因子操作 # 使用字符串有两个缺陷：第一，不在因子水平范围内的不会转化成NA # 第二，仅按字母排序。 # 因此，通过设定因子水平，可以解决上述两个问题。注意水平和字符串是一样的， # 只是相当于设定了范围和排序。 factor(c(&#39;Dec&#39;,&#39;Apr&#39;,&#39;Jam&#39;,&#39;Mar&#39;), levels = c(&#39;Jan&#39;,&#39;Feb&#39;,&#39;Mar&#39;,&#39;Apr&#39;,&#39;May&#39;)) # 因子重编码, 把1改成unmarried等 farcats::fct_recode(rawdata$marrige, &#39;unmarried&#39;=&#39;1&#39;,&#39;married&#39;=&#39;2&#39;,&#39;cohabitation&#39;=&#39;3&#39;,&#39;divore&#39;=&#39;4&#39;,&#39;wid&#39;=&#39;5&#39;) dbplyr可以连接到几乎任何数据库。 wbstats下载世界银行数据，很牛逼。Stata里面的wbopendata包更牛逼。 stationaRy:一个从NOAA上下载气象数据，如气温，风向等的包。该包就三个函数，一个用来得到站点id，一个用这个id下载数据，还有一个是如果你想得到其他额外的气象数据时可能有用。 当你发现你用save命令保存一个数据长达数分钟时，建议你迅速调用qs包，可能一分钟不到就帮你快速读入和保存了。但这个包一次只能保存一个变量。 tor: 提供允许用户同时导入多个文件的功能. 读入excel中的sheet名：openxlsx::getSheetNames(file) XLConnect处理excel最强大的包。但需要JRE（java run enviornment）。 # 可以不改变原有数据，然后把一个数据框精准地写入某个地方 writeWorksheetToFile(&quot;XLConnectExample2.xlsx&quot;, data = ChickWeight, sheet = &quot;chickSheet&quot;, startRow = 3, startCol = 4,header = FALSE, clearSheets = FALSE) 使用as.Date来生成日期，必须带有年月日三个要素，使用format来输出日期格式，此时可以只输出年和月。如as.Date('2010/05/01') %&gt;% format(.,format = '%Y%m') seq.Date()生成日期序列，包括日、星期、月、年。 readstata13包可以读入更高版本的stata数据格式。 zoo::rollapply(x, 30, mean)就是30天的移动平均求值。 select是一个很牛逼的函数 select(regdata,id, year) # 选择regdata数据框的id和year两列 select(regdata,starts_with(&#39;abc&#39;)) # 匹配以&#39;abc&#39;开头的列 select(regdata,ends_with(&#39;abc&#39;)) # 匹配以&#39;abc&#39;结尾的列 select(regdata,contains(&#39;abc&#39;)) # 匹配包含&#39;abc&#39;的列 select(regdata,matches(&#39;abc&#39;)) # 正则表达匹配 select(regdata,num_range(&#39;x&#39;,1:3)) # 匹配x1, x2,x3的列 R语言给数组各维数命名 # Create two vectors of different lengths. vector1 &lt;- c(5,9,3) vector2 &lt;- c(10,11,12,13,14,15) column.names &lt;- c(&quot;COL1&quot;,&quot;COL2&quot;,&quot;COL3&quot;) row.names &lt;- c(&quot;ROW1&quot;,&quot;ROW2&quot;,&quot;ROW3&quot;) matrix.names &lt;- c(&quot;Matrix1&quot;,&quot;Matrix2&quot;) # Take these vectors as input to the array. result &lt;- array(c(vector1,vector2),dim = c(3,3,2),dimnames = list(row.names,column.names, matrix.names)) print(result) pdftools包的函数可以读PDF文件： pdf_info(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_text(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_data(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_fonts(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_attachments(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_toc(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_pagesize(pdf, opw = &quot;&quot;, upw = &quot;&quot;) 同时，利用qpdf包的pdf_subset,pdf_combine,pdf_split可以提取PDF的部分内容，合并PDF文件，把每一页分成一个PDF文件。 3.2 data.table包 这个包操作几十万的数据，简直就是“卧槽”，几乎感觉不到延迟，数据量大，强烈推荐该包。 3.2.1 基本操作 该包基本语法为dt[i,j,by]，即行，列和分组。 提供单个参数，如dt[1:3]，即为选择行。 .N是非常有用的符号，分组时，它表示计数，单独用dt[.N]则选择了最后一行。.I则表示1:.N。 筛选行时，可以直接使用列名，如dt[province == '北京市'] 选择列时，也是直接用列名如city，而不是加引号的'city'。比如dt[,city]，如果你一定喜欢用引号，可以使用dt[,'city',with = FALSE]。 选择多个列，既可以用dt[,c('id','year'),with = FALSE]也可以用dt[,list(id,year)]，而且还可以这样创造新的列dt[,list(id,year, density = size/weight)]。而且list()还有个缩写.()。 原地赋值:=。如dt[,density:=size/weight]，原来的数据框就已经改变了。 该包的set系列函数因为避免了不必要的复制，展现出惊人的性能。setDF(dt)把data.table变成data.frame，setDT(dt)是反向操作。setnames(dt,'name_pre','name_now')修改列名。setcolorder(dt,c('id','year'))给列重新排序。 3.2.2 分组操作 3.3 与SQL数据库交互 SQL数据库可以百度SQLStudio软件作为图形化界面打开，查阅等。在R语言中，有RSQLite包。工作流如下 library(RSQLite) # 创建连接 con &lt;- dbConnect(SQLite(), dbname = &#39;data-raw/mydatabase.sqlite&#39;) # 写入数据库，name 是数据库的表名，value 是R中的数据框 dbWriteTable(con, name = &#39;GQ2008&#39;, value = GQ2008, overwrite = T) # 查数据库有啥表 dbListTables(con) # 读数据库 dbReadTable(con, &#39;GQ2008&#39;) # 读部分数据库 dbGetQuery(con, &#39;select var1, var2, [var(3)] from GQ2008&#39;) # 字段中包含特殊字符时要用中括号括起来 # 断开链接 dbDisconnect(con) 3.4 连接各种数据库的R包 3.4.1 RJSDMX包下载世界各大数据库数据 一般工作流： library(RJSDMX) # 查看有哪些库可以用 getProviders() # 库中有哪些子库可以用 getFlows(&#39;WITS&#39;) # 该子库调取数据需要哪几个字段 getDimensions(&#39;WITS&#39;,&#39;WBG_WITS,DF_WITS_TradeStats_Tariff,1.0&#39;) # 查看这个指标有几个选项 getCodes(&#39;WITS&#39;,&#39;WBG_WITS,DF_WITS_TradeStats_Tariff,1.0&#39;,&#39;INDICATOR&#39;) # 查好了就可以下载 ans &lt;- getTimeSeries(&#39;WITS&#39;, &#39;DF_WITS_TradeStats_Tariff/A.CHN.WLD.01-05_Animal.MFN-WGHTD-AVRG&#39;) # 你也可以调用图形窗口查阅命令 sdmxHelp() IMF2里面的IFS数据库里面有很多季度的宏观数据，如GDP，固定资本形成等 3.4.2 imfr包下载IMF数据 # Download Real Effective Exchange Rate (CPI base) for the UK and China # at an annual frequency real_ex &lt;- imf_data(database_id = &#39;IFS&#39;, indicator = &#39;EREER_IX&#39;, country = c(&#39;CN&#39;, &#39;GB&#39;), freq = &#39;A&#39;) 3.5 前向、后向、线性和样条插值 zoo包 zoo::na.locf缺省设置可以前向插，即缺失值等于前面的值。当将该函数的fromLast参数设为真时，即为后向插。 zoo:na.approx可以线性插值但不能外推；na.spline可以样条插值； imputeTS包,imputeTS::na.locf也可以，不过它只能对数值。它也有后向插值选项。 3.5.1 signal包 它有一个插值函数interp1函数，比较好用： interp1(x, y, xi, method = c(&quot;linear&quot;, &quot;nearest&quot;, &quot;pchip&quot;, &quot;cubic&quot;, &quot;spline&quot;), extrap = NA, ...) 它的参数说明如下 x,y：vectors giving the coordinates of the points to be interpolated. x is assumed to be strictly monotonic. xi：points at which to interpolate. method ： one of “linear,” “nearest,” “pchip,” “cubic,” “spline.” ‘nearest’: return nearest neighbour ‘linear’: linear interpolation from nearest neighbours ‘pchip’: piecewise cubic hermite interpolating polynomial ‘cubic’: cubic interpolation from four nearest neighbours ‘spline’: cubic spline interpolation–smooth first and second derivatives throughout the curve. for method=‘spline,’ additional arguments passed to splinefun. Details extrap： if TRUE or ‘extrap,’ then extrapolate values beyond the endpoints. If extrap is a number, replace values beyond the endpoints with that number (defaults to NA). "]]
